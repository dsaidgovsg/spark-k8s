name: CI

on:
  push:
    branches:
    - master
    - v*
  pull_request:
    branches:
    - master
    - v*

jobs:
  build:
    strategy:
      matrix:
        version:
{%- for v in versions %}
{%- for spark in v.spark %}
{%- for java in v.java %}
{%- for hadoop in v.hadoop %}
{%- for scala in v.scala %}
        - spark:        "{{ spark }}"
          java:         "{{ java }}"
          hadoop:       "{{ hadoop }}"
          scala:        "{{ scala }}"
          with_hive:    "true"
          with_pyspark: "true"
{%- endfor %}
{%- endfor %}
{%- endfor %}
{%- endfor %}
{%- endfor %}
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: "spark-k8s"
      SELF_VERSION: "{{ self_version }}"
      {% raw -%}
      SPARK_VERSION: "${{ matrix.version.spark }}"
      HADOOP_VERSION: "${{ matrix.version.hadoop }}"
      SCALA_VERSION: "${{ matrix.version.scala }}"
      JAVA_VERSION: "${{ matrix.version.java }}"
      WITH_HIVE: "${{ matrix.version.with_hive }}"
      WITH_PYSPARK: "${{ matrix.version.with_pyspark }}"
      {%- endraw %}
    steps:
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        {% raw -%}
        java-version: '${{ matrix.version.java }}'
        {%- endraw %}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install tera-cli
      run: |-
        wget https://github.com/guangie88/tera-cli/releases/download/v0.4.1/tera-cli-v0.4.1-x86_64-unknown-linux-musl.tar.gz
        tar xf tera-cli-*.tar.gz
        mv tera-cli*/tera /tmp/tera
        rm tera-cli-*.tar.gz
    - name: Check differences between ci.yml and ci.yml.tmpl
      run: |-
        cp .github/workflows/ci.yml .github/workflows/ci.yml.backup
        TERA=/tmp/tera ./templates/apply-vars.sh
        if ! diff .github/workflows/ci.yml .github/workflows/ci.yml.backup; then echo "ci.yml.tmpl and ci.yml differs!" && exit 1; fi
    - name: Check shell scripts
      run: |-
        shellcheck templates/apply-vars.sh
        shellcheck push-images.sh
    - name: Install setuptools and wheel
      run: python3 -m pip install setuptools wheel
    - name: Build Docker image
      run: bash make-distribution.sh
    - name: Push Docker image
      run: bash push-images.sh
      env:
        {% raw -%}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        IMAGE_ORG: ${{ secrets.IMAGE_ORG }}
        {%- endraw %}
      if: github.event_name == 'push'
